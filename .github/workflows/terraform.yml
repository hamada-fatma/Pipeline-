name: Services Deployment

on:
  workflow_run:
    workflows: ["Infrastructure"]
    types:
      - completed

jobs:
  lint:
    name: Lint the code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Linter
        run: echo "Linter step"

  build:
    name: Build Docker Images and Push to ECR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service_name: ['service1', 'service2']  # Liste de tous les services
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ matrix.service_name }}:latest ./${{ matrix.service_name }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ matrix.service_name }}:latest

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Tests
        run: echo "Tests step"

  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: build  # L'étape de déploiement dépend de la réussite de l'étape de build
    strategy:
      matrix:
        service_name: ['service1', 'service2']  # Liste de tous les services
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Register Task Definition
        run: |
          # Assurez-vous de créer un fichier JSON pour la définition de tâche avant cette étape
          # Remplacez 'task-definition.json' par votre propre fichier de définition
          aws ecs register-task-definition --cli-input-json file://task-definition.json

      - name: Deploy Services to ECS
        run: |
          aws ecs update-service \
            --cluster app-deployment-cluster \
            --service ${{ matrix.service_name }}-ecs-service \
            --force-new-deployment
